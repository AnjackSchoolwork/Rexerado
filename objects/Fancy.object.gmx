<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>dog_face</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mobile_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize player

// Configure controls
keys = ds_map_create()
buttons = ds_map_create()
gampad = UI_Controller.gamepad

ds_map_add(keys, "UP", ord('W'))
ds_map_add(keys, "DOWN", ord('S'))
ds_map_add(keys, "LEFT", ord('A'))
ds_map_add(keys, "RIGHT", ord('D'))
ds_map_add(keys, "BARK", vk_rshift)
ds_map_add(buttons, "BARK", gp_face1)
ds_map_add(keys, "GRAB", vk_space)
ds_map_add(buttons, "GRAB", gp_face2)

// Default speed and move values
last_direction = direction
speed_value = 10
move_u = 0
move_d = 0
move_l = 0
move_r = 0
move_v = 0
move_h = 0

// Bark
charging_bark = false
bark_charge = 0
charge_time = 0
max_bark_radius = 180

// Held objects
obj_in_mouth = noone
grabbing = false

// Sprites
sprite_list = ds_map_create()

ds_map_add(sprite_list, "rear", dog_rear)
ds_map_add(sprite_list, "front", dog_face)
ds_map_add(sprite_list, "left", dog_left)
ds_map_add(sprite_list, "right", dog_right)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do things

// If we're carrying anything, move it with us
//if(speed != 0){
    orient_obj_in_mouth(dog_left, dog_right)
//}
// If we are charging up a bark, track that
if(charging_bark) {
    charge_time = current_time - bark_charge_begin
    if(charge_time &gt;= 1000) {
        bark_charge = 10
    }
    else {
        bark_charge = floor(charge_time/100)
    }
}

if(gamepad_is_connected(0)) {
    do_input_actions(buttons, true)
}
else {
    do_input_actions(keys, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// I am an dog
draw_sprite(sprite_index, image_index, x, y)

if(speed &gt; 0){
    if((0 &lt;= direction and direction &lt; 45) or (360 &gt;= direction and direction &gt; 315)) {
        sprite_index = sprite_list[? "right"]
    }
    else if(45 &lt;= direction and direction &lt; 135) {
        sprite_index = sprite_list[? "rear"]
    }
    else if(135 &lt;= direction and direction &lt; 225) {
        sprite_index = sprite_list[? "left"]
    }
    else {
        sprite_index = sprite_list[? "front"]
    }
}


if(DEBUG) {
    draw_circle(x, y, max_bark_radius, true)
    draw_arrow(x, y, x + lengthdir_x(10, direction), y + lengthdir_y(10, direction), 10)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
