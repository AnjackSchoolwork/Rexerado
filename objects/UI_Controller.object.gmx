<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Randomize
randomize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
switch(room_get_name(room)) {
    case "Main_Menu":
        draw_set_color(c_white)
        draw_set_font(fnt_menu)
        draw_set_halign(fa_center)
        draw_set_valign(fa_middle)
        draw_text(view_xview[view_current] + view_wview[view_current] / 2, view_yview[view_current] + view_hview[view_current] / 2, "Rexerado")
        draw_set_halign(fa_left)
        draw_set_valign(fa_top)
        break
    case "End_Game":
        result_text = "Lost"
        if(Game_Controller.level_complete) {
            result_text = "Won"
        }
        draw_set_color(c_white)
        draw_set_font(fnt_menu)
        draw_set_halign(fa_center)
        draw_set_valign(fa_middle)
        draw_text(view_xview[view_current] + view_wview[view_current] / 2, view_yview[view_current] + view_hview[view_current] / 2 - 36, "Game Over")
        draw_text(view_xview[view_current] + view_wview[view_current] / 2, view_yview[view_current] + view_hview[view_current] / 2 + 36, "You " + result_text)
        draw_text(view_xview[view_current] + view_wview[view_current] / 2, view_yview[view_current] + view_hview[view_current] - 36, "Press (nearly) any key to continue.")
        break
    case "Credits":
        break
    case "Instructions":
        break
    default:
        draw_set_color(c_green)
        draw_set_font(fnt_UI)
        
        draw_text(view_xview[view_current] + 10, view_yview[view_current] + 10, "Roam'n Cats: " + string(Game_Controller.roaming_cats))
        draw_text(view_xview[view_current] + 10, view_yview[view_current] + 30, "Corralled Cats: " + string(collection_point.cat_count))
        draw_text(view_xview[view_current] + 10, view_yview[view_current] + 50, "Level Complete: " + string(Game_Controller.level_complete))
        
        draw_set_color(c_black)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Some other keyboard controls

if(room == End_Game) {
    room = Credits
}
else if (room == Credits) {
    game_restart()
}
else {
    if(keyboard_check(ord("R"))) {
        room_restart()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
